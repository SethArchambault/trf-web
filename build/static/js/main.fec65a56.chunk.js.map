{"version":3,"sources":["defaultData.js","App.js","index.js"],"names":["accessContext","initAccessContext","appName","network","host","port","protocol","chainId","walletProviders","scatter","getWalletProviders","Status","status","useSelector","state","useDispatch","Wallets","dispatch","onWalletProviderClick","idx","el","a","type","walletProvider","wallet","initWallet","payload","console","log","connect","connect_response","discover","pathIndexList","discoveryData","accountInfo","keyToAccountMap","length","keyObj","accountName","accounts","account","authorization","login","Error","eosApi","transact","actions","name","actor","permission","data","user","blocksBehind","expireSeconds","wallet_result","renderWalletProviders","map","meta","className","onClick","key","shortName","App","renderLoginBox","style","minWidth","flexGrow","paddingRight","src","display","flexDirection","backgroundColor","padding","maxHeight","borderBottomRightRadius","borderBottomLeftRadius","letterSpacing","fontWeight","fontSize","textDecoration","target","href","margin","maxWidth","alignItems","alignContent","reducers","combineReducers","action","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fec65a56.chunk.js","sourcesContent":["import { initAccessContext } from 'eos-transit';\nimport scatter from 'eos-transit-scatter-provider';\n\nexport const accessContext = initAccessContext({\n\tappName: 'trf-web',\n\tnetwork: {\n\t\t/*host: 'eos.greymass.com',*/\n\t\thost: 'jungle2.cryptolions.io',\n\t\tport: 443,\n\t\tprotocol: 'https',\n\t\t/*chainId: 'aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906'*/\n\t\tchainId: 'e70aaab8997e1dfce58fbfac80cbbb8fecec7b99cf982a9444273cbc64c41473'\n\t},\n\twalletProviders: [\n\t\tscatter(),\n\t]\n});\nexport const walletProviders = accessContext.getWalletProviders();\n","import React, {useState, useEffect} from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport './App.css';\nimport { accessContext, walletProviders } from './defaultData.js';\n\nconst Status = () => {\n    const status = useSelector((state) =>state.status)\n    const dispatch = useDispatch()\n    return (<div>{status}</div>)\n}\nconst Wallets = () => {\n    const dispatch = useDispatch()\n\n    const onWalletProviderClick = (idx) => (async (el) => {\n        // @todo(seth): just do a dispatch, and move all this logic there\n        dispatch({type:'DO'})\n        try { \n            const walletProvider = walletProviders[idx];\n            const wallet = accessContext.initWallet(walletProvider);\n            dispatch({type:'switch', payload: 'wallet initialized'})\n            console.log('Wallet initialized', wallet)\n            let connect_response = await wallet.connect()\n            console.log('Successfully connected!', connect_response)\n            dispatch({type:'switch', payload: 'connected'})\n\t\t\tconsole.log('about to discover')\n            const discoveryData = await wallet.discover({ pathIndexList: [ 0,1,2,3 ] })\n            let accountInfo = null\n            if (discoveryData.keyToAccountMap.length > 0) {\n                dispatch({type:'switch', payload:'discovery_completed'})\n                // @todo(seth): should allow selection\n                const index = 0;\n                const keyObj = discoveryData.keyToAccountMap[index];\n                const accountName = keyObj.accounts[0].account;\n                const authorization = keyObj.accounts[0].authorization;\n                accountInfo = wallet.login(accountName, authorization)\n            } \n            else { // discovery not supported (scatter for example)\n                dispatch({type:'switch', payload:'logging in'})\n                accountInfo = await wallet.login()\n            }\n            // logged in\n            if (!accountInfo) throw Error(\"Not logged in\")\n            console.log('Successfully logged in', accountInfo);\n            console.log('wallet', wallet)\n            dispatch({type:'switch', payload:'submitting to blockchain'})\n\n\n            let wallet_result = await wallet.eosApi.transact({\n                actions: [{\n                      account: 'wigglewiggle',\n                      name: 'hi',\n                      authorization: [{\n                                    actor: 'wigglewiggle',\n                                    permission: 'active',\n                                  }],\n                    data: {user:\"wigglewiggle\"},\n                }],\n            }, {blocksBehind: 3, expireSeconds: 60});\n            console.log('transaction result', wallet_result)\n            dispatch({type:'switch', payload:'done'})\n        }\n        catch(err) {\n            dispatch({type:'switch', payload:'error'})\n            console.log('error', err)\n        }\n    });\n\n    const renderWalletProviders = walletProviders.map(\n        ({meta}, idx) => (<div className=\"button\" onClick={onWalletProviderClick(idx, accessContext, walletProviders)} key={idx}>{meta.shortName}</div>)\n    )\n\n    return <>{renderWalletProviders}</>\n}\n\n\nconst App = ({accessContext, walletProviders}) => {\n    const status = useSelector((state) =>state.status)\n    const dispatch = useDispatch()\n    let renderLoginBox = null\n    if (status == 'intro') {\n        renderLoginBox = (\n\t\t\t<div style={{minWidth:500, flexGrow:1, paddingRight:10}}> \n                <div>\n                <p>this is the greatest thing in the world</p>\n                </div>\n                <div>\n                    <div className=\"button\" onClick={() => { dispatch({type:'switch', payload: 'login_selection'}) }} >Login with EOS</div>\n                </div>\n\t\t\t</div>\n        )\n    } else if (status == 'login_selection'){\n        renderLoginBox = (\n\t\t\t<div style={{minWidth:500, flexGrow:1, paddingRight:10}}> \n                <Wallets accessContext={accessContext} walletProviders={walletProviders} />\n\t\t\t</div>\n        )\n    } else if (status == 'done') {\n        renderLoginBox = (\n\t\t\t<div style={{minWidth:500, flexGrow:1, paddingRight:10}}> \n                <div>\n                  Success! Now find this rob guy, and hand him your travel info.  \n                </div>\n                <div>\n                <img src=\"/img/rob.jpg\" />\n                </div>\n\t\t\t</div>\n        )\n    } else if (status == 'already_signed_up') {\n        renderLoginBox = (\n\t\t\t<div style={{minWidth:500, flexGrow:1, paddingRight:10}}> \n                <div>\n                  You're already signed up. Now you just need to find this rob guy, and hand him your travel info.  \n                </div>\n                <div>\n                <img src=\"/img/rob.jpg\" />\n                </div>\n\t\t\t</div>\n        )\n    } else {\n        renderLoginBox = (\n\t\t\t<div style={{minWidth:500, flexGrow:1, paddingRight:10}}> \n\t\t\t\t<Status />\n\t\t\t</div>\n        )\n    }\n\treturn (\n    <div style={{display:'flex', flexDirection: 'column'}}> \n        <div style={{display:'flex', flexDirection: 'row', backgroundColor:'#F3F5F9',}}>\n            <div style={{flexGrow:1, padding: '20px 20px',   display:'flex', flexDirection: 'column', flexGrow: 1,  letterSpacing: '1px', fontSize:23, }} > TRAVEL REIMBURSMENT FUND</div>\n            <div style={{ maxHeight:200, borderBottomRightRadius:5, borderBottomLeftRadius: 5, padding: '20px 20px', backgroundColor:'#F3F5F9', letterSpacing: '1px', fontWeight:'bold', fontSize:23}} >\n                <a style={{textDecoration:'none'}} target=\"_blank\" href=\"http://eosdetroit.io\">EOS DETROIT</a>\n            </div>\n        </div>\n    \n        <div style={{ margin:'0 auto', maxWidth:1000, display:'flex', flexDirection: 'row', padding:20, alignItems:'flex-start', alignContent:'flex-start'}}>\n            {renderLoginBox}\n\t\t\t<div style={{flexGrow:0}}> \n\t\t\t\t<div><img src=\"/img/trf_sky.png\" /></div>\n\t\t\t</div>\n\t\t</div>\n    </div>\n\t)\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider} from \"react-redux\";\nimport {combineReducers, createStore} from 'redux'\nimport './index.css';\nimport App from './App';\n\nconst statusReducer = (status = 'intro', action ) => {\n    switch(action.type) {\n        case \"switch\":\n            return  action.payload;\n        default: \n            return status;\n    }\n}\n\nlet reducers = combineReducers(\n    {\n        \"status\": statusReducer,\n    }\n)\nlet store = createStore(reducers);\n        \nReactDOM.render(\n    (<Provider store={store}>\n        <App />\n    </Provider>), document.getElementById('root'));\n\n"],"sourceRoot":""}